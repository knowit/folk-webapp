service: folk-webapp

custom:
  stage: ${opt:stage, self:provider.stage}
  bucketName: ${self:custom.stage}-folk-static-web
  distApiDomainId: ${self:custom.stage}-folk-api-web-dist
  domainName: ${self:custom.bucketName}.s3.amazonaws.com
  domainId: custom/${self:custom.domainName}
  service: ${self:custom.stage}-${self:service}
  cloudFrontOrigin:
    DomainName: ${self:custom.domainName}
    Id: ${self:custom.domainId}
    CustomOriginConfig:
      HTTPPort: 80
      HTTPSPort: 443
      OriginProtocolPolicy: https-only
  authEnv:
    OAUTH_URL: ${ssm:/${self:custom.stage}/fold-webapp/AUTH_ENDPOINT}
    CLIENT_ID: ${ssm:/${self:custom.stage}/fold-webapp/CLIENT_ID~true}
    CLIENT_SECRET: ${ssm:/${self:custom.stage}/fold-webapp/CLIENT_SECRET~true}

provider:
  name: aws
  stage: dev
  region: us-east-1
  runtime: nodejs12.x
  stackName: ${self:custom.service}
  httpApi:
    name: ${self:custom.service}-api
    payload: '2.0'
    cors: true

package:
  include:
    - backend/**
  exclude:
    - '*/**'
  individually: true

functions:
  edgeAdaptiveContent:
    handler: backend/edge.adaptiveContent
    name: ${self:custom.stage}-${self:service}-edge-adaptive-content-select
    events:
      - cloudFront:
          eventType: origin-request
          origin: ${self:custom.cloudFrontOrigin}

  authLogin:
    handler: backend/auth.login
    name: ${self:custom.service}-auth-login
    environment: ${self:custom.authEnv}
    events:
      - httpApi:
          method: GET
          path: /auth/login

  authCallback:
    handler: backend/auth.callback
    name: ${self:custom.service}-auth-callback
    environment: ${self:custom.authEnv}
    events:
      - httpApi:
          method: GET
          path: /auth/callback

  authUserInfo:
    handler: backend/auth.userInfo
    name: ${self:custom.service}-auth-userInfo
    environment: ${self:custom.authEnv}
    events:
      - httpApi:
          method: GET
          path: /auth/userInfo

  apiData:
    handler: backend/api.data
    name: ${self:custom.service}-api-data
    events:
      - httpApi:
          method: GET
          path: /api/data/{name}

resources:
  Resources:
    FolkStaticS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    FolkStaticS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: FolkStaticS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucketName}/*

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - ${self:custom.cloudFrontOrigin}
            - DomainName: g4usaty3db.execute-api.us-east-1.amazonaws.com # TODO: ref
              Id: ${self:custom.distApiDomainId}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
                OriginSSLProtocols:
                  - TLSv1.2
          CacheBehaviors:
            - TargetOriginId: ${self:custom.distApiDomainId}
              ForwardedValues:
                Cookies:
                  Forward: all
                QueryString: true
                Headers:
                  - Accept
                  - Content-Type
                  - Authorization
                  - Origin
                  - Referer
              PathPattern: /auth/*
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
                - OPTIONS
                - PUT
                - PATCH
                - POST
                - DELETE
            - TargetOriginId: ${self:custom.distApiDomainId}
              ForwardedValues:
                QueryString: true
                Headers:
                  - Accept
                  - Content-Type
                  - Authorization
              PathPattern: /api/*
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
                - OPTIONS
                - PUT
                - PATCH
                - POST
                - DELETE
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            ViewerProtocolPolicy: redirect-to-https
          PriceClass: PriceClass_100

  Outputs:
    FolkStaticBucketOutput:
      Value:
        'Ref': FolkStaticS3Bucket
    CloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [CloudFrontDistribution, DomainName]
